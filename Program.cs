internal class Program
{
    private static void Main(string[] args)
    {
        object[,] map = {
            {new Obstacle(),  new Obstacle(),   new Obstacle(), new Obstacle(),   new Obstacle(), new Obstacle(),  new Obstacle(),   new Obstacle(), new Obstacle(),   new Obstacle(), new Obstacle(),  new Obstacle(),   new Obstacle(), new Obstacle(),   new Obstacle(), new Obstacle(),  new Obstacle(),   new Obstacle(), new Obstacle(),   new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Space(),    new Space(),     new Space(),      new Space(),    new Space(),      new Obstacle(),},
            {new Obstacle(),  new Obstacle(),   new Obstacle(), new Obstacle(),   new Obstacle(), new Obstacle(),  new Obstacle(),   new Obstacle(), new Obstacle(),   new Obstacle(), new Obstacle(),  new Obstacle(),   new Obstacle(), new Obstacle(),   new Obstacle(), new Obstacle(),  new Obstacle(),   new Obstacle(), new Obstacle(),   new Obstacle(),},
        };
        Event SomeEvent = new Event(map);
    }
    
}
